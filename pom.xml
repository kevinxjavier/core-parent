<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.kevinpina</groupId>
	<artifactId>core-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>${project.groupId}:${project.artifactId}</name>
	<description>Project Parent Shop</description>
	<url>https://kevinpina.com</url>

	<organization>
		<name>Home</name>
		<url>http://www.kevinpina.com</url>
	</organization>
	<licenses>
		<license>
			<name>GNU Lesser General Public License</name>
			<url>http://www.gnu.org/licenses/lgpl.txt</url>
			<distribution>repo</distribution>
			<comments>GNU Lesser General Public License v3.0</comments>
		</license>
	</licenses>
	<developers>
		<developer>
			<id>kpina</id>
			<name>Kevin Pi√±a Calatrava</name>
			<email>kevin@kevin.cx</email>
			<url>https://www.kevin.cx</url>
			<organization>Home</organization>
			<organizationUrl>http://www.kevinpina.com</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
			<timezone>+2</timezone>
		</developer>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>

	<properties>
		<java.version>18</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>

		<spring-boot.version>3.1.4</spring-boot.version>
		<spring-cloud.version>2022.0.1</spring-cloud.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<generated-sources-java-path>src/main/java/</generated-sources-java-path>

		<!-- Check style -->
		<checkstyle.skip>false</checkstyle.skip>

		<!-- Test -->
		<skipTests>false</skipTests>
		<skipUTs>${skipTests}</skipUTs>
		<skipITs>${skipTests}</skipITs>
		<failsafeArgLine />

		<!--PLUGINS -->
		<jacoco-plugin.version>0.8.10</jacoco-plugin.version>
		<cobertura-maven-plugin.version>2.7</cobertura-maven-plugin.version>
		<maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
		<checkstyle.version>8.45</checkstyle.version>
		<maven-compiler-plugin.version>3.12.1</maven-compiler-plugin.version>

		<!-- SPRING DOC -->
		<springdoc-openapi-starter-webmvc-ui.version>2.1.0</springdoc-openapi-starter-webmvc-ui.version>
		<jaxb-api.version>2.3.1</jaxb-api.version>

		<!-- OPEN API GENERATOR -->
		<jackson-databind.version>2.15.1</jackson-databind.version>
		<jackson-databind-nullable.version>0.2.6</jackson-databind-nullable.version>
		<openapi-generator.version>6.4.0</openapi-generator.version>

		<!-- Security -->
		<jjwt-api.version>0.11.5</jjwt-api.version>

		<!-- OTHERS -->
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
		<org.mapstruct.version>1.5.5.Final</org.mapstruct.version>
		<jettison.version>1.5.4</jettison.version>
		<h2.version>2.2.224</h2.version>
		<swagger-parser.version>2.1.14</swagger-parser.version>
		<lombok.version>1.18.30</lombok.version>
		<snakeyaml.version>2.0</snakeyaml.version>
		<jackson-datatype-jsr310.version>2.15.2</jackson-datatype-jsr310.version>

		<!--Sonar and JaCoCO coverage related properties -->
		<sonar.exclusions>
			**/bean/**,
			**/config/**,
			**/dto/**,
			**/model/**,
			**/properties/**,
			**/property/**,
			**/filter/**,
			**/constants/**,
			**/enums/**,
			**/domain/**,
			**/entity/**,
			**/audit/**,
			**/utils/**,
			**/*Application.java
		</sonar.exclusions>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<jacoco.it.execution.data.file>
			${project.build.directory}/coverage-reports/jacoco-it.exec
		</jacoco.it.execution.data.file>
		<jacoco.ut.execution.data.file>
			${project.build.directory}/coverage-reports/jacoco-ut.exec
		</jacoco.ut.execution.data.file>
		<sonar.jacoco.reportPath>${jacoco.ut.execution.data.file}</sonar.jacoco.reportPath>
		<sonar.jacoco.itReportPath>${jacoco.it.execution.data.file}</sonar.jacoco.itReportPath>
		<jacoco.execution.file>
			${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco.execution.file>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.junit.vintage</groupId>
						<artifactId>junit-vintage-engine</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-mapstruct-binding</artifactId>
				<version>${lombok-mapstruct-binding.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct</artifactId>
				<version>${org.mapstruct.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson-databind.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jsr310</artifactId>
				<version>${jackson-datatype-jsr310.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
				<version>${springdoc-openapi-starter-webmvc-ui.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>${jaxb-api.version}</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.jettison</groupId>
				<artifactId>jettison</artifactId>
				<version>${jettison.version}</version>
			</dependency>

			<dependency>
				<groupId>io.swagger.parser.v3</groupId>
				<artifactId>swagger-parser</artifactId>
				<version>${swagger-parser.version}</version>
			</dependency>

			<dependency>
				<groupId>org.openapitools</groupId>
				<artifactId>jackson-databind-nullable</artifactId>
				<version>${jackson-databind-nullable.version}</version>
			</dependency>

			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.yaml</groupId>
				<artifactId>snakeyaml</artifactId>
				<version>${snakeyaml.version}</version>
			</dependency>

			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-envers</artifactId>
				<version>${hibernate.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>${surefireArgLine}</argLine>
					<excludes>
						<exclude>**/*IntegrationTests.java</exclude>
						<exclude>**/*IntegrationTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<executions>
					<execution>
						<id>run-integration-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<excludes>
						**/*Constants.class,**/*DTO.class,**/*dto.class,**/*Dto.class,**/com/kevinpina/**/entity/*.class,**/com/kevinpina/**/api/*.class,**/com/kevinpina/**/entity/id/*.class,**/com/kevinpina/**/config/*Config*.class
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-plugin.version}</version>
				<configuration>
					<excludes>
						**/*Constants.class,**/*DTO.class,**/*dto.class,**/*Dto.class,**/com/kevinpina/**/entity/*.class,**/com/kevinpina/**/api/*.class,**/com/kevinpina/**/entity/id/*.class,**/com/kevinpina/**/config/*Config*.class
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${jacoco.ut.execution.data.file}</destFile>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${jacoco.ut.execution.data.file}</dataFile>
							<outputDirectory>
								${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${jacoco.it.execution.data.file}</destFile>
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${jacoco.it.execution.data.file}</dataFile>
							<outputDirectory>
								${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<dependency>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>${lombok-mapstruct-binding.version}</version>
						</dependency>
					</annotationProcessorPaths>
					<compilerArgs>
						<compilerArg>
							-Amapstruct.defaultComponentModel=spring
						</compilerArg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${cobertura-maven-plugin.version}</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
					<check />
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${checkstyle.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<configLocation>
							src/main/config/checkstyle-java-google-style.xml</configLocation>
						<failOnViolation>true</failOnViolation>
						<includeTestSourceDirectory>true</includeTestSourceDirectory>
						<sourceDirectories>
							<sourceDirectory>src/main/java</sourceDirectory>
						</sourceDirectories>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
